{"version":3,"sources":["hardhat/typechain/factories/MyToken1__factory.ts","hardhat/typechain/factories/UniswapV2ERC20__factory.ts","hardhat/typechain/factories/MyToken2__factory.ts","hardhat/typechain/factories/UniswapV2Pair__factory.ts","hardhat/typechain/factories/UniswapV2Router02__factory.ts","hardhat/typechain/factories/UniswapV2Factory__factory.ts","hardhat/typechain/factories/ERC20PresetMinterPauser__factory.ts","hardhat/typechain/factories/ERC20__factory.ts","hardhat/SymfoniContext.tsx","components/Swap.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["MyToken1__factory","signer","_abi","_bytecode","overrides","address","signerOrProvider","Contract","ContractFactory","inputs","stateMutability","type","anonymous","indexed","internalType","name","outputs","UniswapV2ERC20__factory","MyToken2__factory","UniswapV2Pair__factory","UniswapV2Router02__factory","_factory","_WETH","UniswapV2Factory__factory","_feeToSetter","ERC20PresetMinterPauser__factory","symbol","ERC20__factory","name_","symbol_","emptyContract","instance","undefined","factory","defaultProvider","ProviderContext","React","createContext","CurrentAddressContext","defaultSigner","SignerContext","defaultSymfoniContext","currentHardhatProvider","init","Error","loading","messages","providers","SymfoniContext","MyToken1Context","UniswapV2ERC20Context","MyToken2Context","UniswapV2PairContext","UniswapV2Router02Context","UniswapV2FactoryContext","ERC20PresetMinterPauserContext","ERC20Context","Symfoni","showLoading","autoInit","props","useState","initializeCounter","setInitializeCounter","setCurrentHardhatProvider","setLoading","setMessages","setSigner","provider","setProvider","currentAddress","setCurrentAddress","fallbackProvider","providerPriority","setProviderPriority","MyToken1","setMyToken1","UniswapV2ERC20","setUniswapV2ERC20","MyToken2","setMyToken2","UniswapV2Pair","setUniswapV2Pair","UniswapV2Router02","setUniswapV2Router02","UniswapV2Factory","setUniswapV2Factory","ERC20PresetMinterPauser","setERC20PresetMinterPauser","ERC20","setERC20","useEffect","length","console","debug","pop","getProvider","a","hardhatProviderName","_providerPriority","localStorage","getItem","sort","b","reduce","maybeProvider","providerIdentification","foundProvider","Promise","resolve","toLowerCase","getWeb3ModalProvider","web3provider","ethers","Web3Provider","JsonRpcProvider","url","getSigner","_provider","Wallet","fromMnemonic","connect","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","web3Modal","Web3Modal","cacheProvider","subscribed","finish","text","old","finishWithContracts","getMyToken1","_signer","getUniswapV2ERC20","getMyToken2","getUniswapV2Pair","getUniswapV2Router02","getUniswapV2Factory","getERC20PresetMinterPauser","getERC20","providerObject","getAddress","doAsync","contractAddress","constants","AddressZero","Provider","value","handleInitProvider","loadingComponent","map","msg","i","children","Swap","tokenA","tokenB","ERC20Factory","useContext","tokenAInstance","setTokenAInstance","tokenBInstance","setTokenBInstance","tokenASymbol","setTokenASymbol","tokenBSymbol","setTokenBSymbol","attach","fetchTokenSymbols","amount","setAmount","router","exchangeAmount","setExchangeAmount","log","getAmountsOut","utils","parseEther","toString","amountsOut","formatUnits","fetchExchangeAmount","handleSwap","time","Math","floor","Date","now","approve","wait","swapExactTokensForTokens","className","src","alt","width","height","id","placeholder","onChange","event","parseInt","target","disabled","onClick","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a70ca3f3.chunk.js","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { MyToken1 } from \"../MyToken1\";\n\nexport class MyToken1__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(overrides?: Overrides): Promise<MyToken1> {\n    return super.deploy(overrides || {}) as Promise<MyToken1>;\n  }\n  getDeployTransaction(overrides?: Overrides): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): MyToken1 {\n    return super.attach(address) as MyToken1;\n  }\n  connect(signer: Signer): MyToken1__factory {\n    return super.connect(signer) as MyToken1__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): MyToken1 {\n    return new Contract(address, _abi, signerOrProvider) as MyToken1;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Paused\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"previousAdminRole\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"newAdminRole\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RoleAdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleGranted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleRevoked\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Unpaused\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DEFAULT_ADMIN_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MINTER_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"PAUSER_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"burn\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"burnFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleAdmin\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoleMember\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleMemberCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"grantRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasRole\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"pause\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"paused\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"renounceRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"revokeRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"unpause\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { UniswapV2ERC20 } from \"../UniswapV2ERC20\";\n\nexport class UniswapV2ERC20__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(overrides?: Overrides): Promise<UniswapV2ERC20> {\n    return super.deploy(overrides || {}) as Promise<UniswapV2ERC20>;\n  }\n  getDeployTransaction(overrides?: Overrides): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): UniswapV2ERC20 {\n    return super.attach(address) as UniswapV2ERC20;\n  }\n  connect(signer: Signer): UniswapV2ERC20__factory {\n    return super.connect(signer) as UniswapV2ERC20__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): UniswapV2ERC20 {\n    return new Contract(address, _abi, signerOrProvider) as UniswapV2ERC20;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DOMAIN_SEPARATOR\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"PERMIT_TYPEHASH\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"nonces\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"permit\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b50604080518082018252601281527129bab9b434a9bbb0b8102628102a37b5b2b760711b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fefbffe65652a145845c9bc8d0532945be6b9830fe1e9966c887bd298e551ac83818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600355610852806100f96000396000f3fe608060405234801561001057600080fd5b50600436106100af5760003560e01c806306fdde03146100b4578063095ea7b31461013157806318160ddd1461017157806323b872dd1461018b57806330adf81f146101c1578063313ce567146101c95780633644e515146101e757806370a08231146101ef5780637ecebe001461021557806395d89b411461023b578063a9059cbb14610243578063d505accf1461026f578063dd62ed3e146102c2575b600080fd5b6100bc6102f0565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f65781810151838201526020016100de565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61015d6004803603604081101561014757600080fd5b506001600160a01b03813516906020013561031e565b604080519115158252519081900360200190f35b610179610335565b60408051918252519081900360200190f35b61015d600480360360608110156101a157600080fd5b506001600160a01b0381358116916020810135909116906040013561033b565b6101796103cf565b6101d16103f3565b6040805160ff9092168252519081900360200190f35b6101796103f8565b6101796004803603602081101561020557600080fd5b50356001600160a01b03166103fe565b6101796004803603602081101561022b57600080fd5b50356001600160a01b0316610410565b6100bc610422565b61015d6004803603604081101561025957600080fd5b506001600160a01b038135169060200135610441565b6102c0600480360360e081101561028557600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c0013561044e565b005b610179600480360360408110156102d857600080fd5b506001600160a01b0381358116916020013516610650565b6040518060400160405280601281526020017129bab9b434a9bbb0b8102628102a37b5b2b760711b81525081565b600061032b33848461066d565b5060015b92915050565b60005481565b6001600160a01b0383166000908152600260209081526040808320338452909152812054600019146103ba576001600160a01b038416600090815260026020908152604080832033845290915290205461039590836106cf565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b6103c584848461071f565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60035481565b60016020526000908152604090205481565b60046020526000908152604090205481565b604051806040016040528060038152602001620534c560ec1b81525081565b600061032b33848461071f565b42841015610498576040805162461bcd60e51b8152602060048201526012602482015271155b9a5cddd85c158c8e881156141254915160721b604482015290519081900360640190fd5b6003546001600160a01b0380891660008181526004602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa1580156105b3573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906105e95750886001600160a01b0316816001600160a01b0316145b61063a576040805162461bcd60e51b815260206004820152601c60248201527f556e697377617056323a20494e56414c49445f5349474e415455524500000000604482015290519081900360640190fd5b61064589898961066d565b505050505050505050565b600260209081526000928352604080842090915290825290205481565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b8082038281111561032f576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160a01b03831660009081526001602052604090205461074290826106cf565b6001600160a01b03808516600090815260016020526040808220939093559084168152205461077190826107cd565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b8082018281101561032f576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfea264697066735822122045422fc59aec6e707a9b4b7f6f03ba627caa121d903fe0b221c507e3da202f6f64736f6c634300060c0033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { MyToken2 } from \"../MyToken2\";\n\nexport class MyToken2__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(overrides?: Overrides): Promise<MyToken2> {\n    return super.deploy(overrides || {}) as Promise<MyToken2>;\n  }\n  getDeployTransaction(overrides?: Overrides): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): MyToken2 {\n    return super.attach(address) as MyToken2;\n  }\n  connect(signer: Signer): MyToken2__factory {\n    return super.connect(signer) as MyToken2__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): MyToken2 {\n    return new Contract(address, _abi, signerOrProvider) as MyToken2;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Paused\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"previousAdminRole\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"newAdminRole\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RoleAdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleGranted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleRevoked\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Unpaused\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DEFAULT_ADMIN_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MINTER_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"PAUSER_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"burn\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"burnFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleAdmin\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoleMember\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleMemberCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"grantRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasRole\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"pause\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"paused\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"renounceRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"revokeRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"unpause\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040523480156200001157600080fd5b506040518060400160405280600a81526020016926bc902a37b5b2b7101960b11b815250604051806040016040528060048152602001635357454560e01b815250818181600490805190602001906200006c92919062000229565b5080516200008290600590602084019062000229565b50506006805461ff001960ff1990911660121716905550620000af6000620000a962000115565b62000119565b620000de7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6620000a962000115565b6200010d7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a620000a962000115565b5050620002c5565b3390565b62000125828262000129565b5050565b6000828152602081815260409091206200014e91839062000b61620001a2821b17901c565b1562000125576200015e62000115565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000620001b9836001600160a01b038416620001c2565b90505b92915050565b6000620001d0838362000211565b6200020857508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620001bc565b506000620001bc565b60009081526001919091016020526040902054151590565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200026c57805160ff19168380011785556200029c565b828001600101855582156200029c579182015b828111156200029c5782518255916020019190600101906200027f565b50620002aa929150620002ae565b5090565b5b80821115620002aa5760008155600101620002af565b61184880620002d56000396000f3fe608060405234801561001057600080fd5b50600436106101595760003560e01c806370a08231116100c957806370a082311461038557806379cc6790146103ab5780638456cb59146103d75780639010d07c146103df57806391d148541461041e57806395d89b411461044a578063a217fddf14610452578063a457c2d71461045a578063a9059cbb14610486578063ca15c873146104b2578063d5391393146104cf578063d547741f146104d7578063dd62ed3e14610503578063e63ab1e91461053157610159565b806306fdde031461015e578063095ea7b3146101db57806318160ddd1461021b57806323b872dd14610235578063248a9ca31461026b5780632f2ff15d14610288578063313ce567146102b657806336568abe146102d457806339509351146103005780633f4ba83a1461032c57806340c10f191461033457806342966c68146103605780635c975abb1461037d575b600080fd5b610166610539565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101a0578181015183820152602001610188565b50505050905090810190601f1680156101cd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610207600480360360408110156101f157600080fd5b506001600160a01b0381351690602001356105cf565b604080519115158252519081900360200190f35b6102236105ed565b60408051918252519081900360200190f35b6102076004803603606081101561024b57600080fd5b506001600160a01b038135811691602081013590911690604001356105f3565b6102236004803603602081101561028157600080fd5b503561067a565b6102b46004803603604081101561029e57600080fd5b50803590602001356001600160a01b031661068f565b005b6102be6106fb565b6040805160ff9092168252519081900360200190f35b6102b4600480360360408110156102ea57600080fd5b50803590602001356001600160a01b0316610704565b6102076004803603604081101561031657600080fd5b506001600160a01b038135169060200135610765565b6102b46107b3565b6102b46004803603604081101561034a57600080fd5b506001600160a01b038135169060200135610812565b6102b46004803603602081101561037657600080fd5b5035610883565b610207610897565b6102236004803603602081101561039b57600080fd5b50356001600160a01b03166108a5565b6102b4600480360360408110156103c157600080fd5b506001600160a01b0381351690602001356108c0565b6102b461091a565b610402600480360360408110156103f557600080fd5b5080359060200135610977565b604080516001600160a01b039092168252519081900360200190f35b6102076004803603604081101561043457600080fd5b50803590602001356001600160a01b0316610996565b6101666109ae565b610223610a0f565b6102076004803603604081101561047057600080fd5b506001600160a01b038135169060200135610a14565b6102076004803603604081101561049c57600080fd5b506001600160a01b038135169060200135610a7c565b610223600480360360208110156104c857600080fd5b5035610a90565b610223610aa7565b6102b4600480360360408110156104ed57600080fd5b50803590602001356001600160a01b0316610acb565b6102236004803603604081101561051957600080fd5b506001600160a01b0381358116916020013516610b24565b610223610b4f565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105c55780601f1061059a576101008083540402835291602001916105c5565b820191906000526020600020905b8154815290600101906020018083116105a857829003601f168201915b5050505050905090565b60006105e36105dc610b76565b8484610b7a565b5060015b92915050565b60035490565b6000610600848484610c66565b6106708461060c610b76565b61066b85604051806060016040528060288152602001611632602891396001600160a01b038a1660009081526002602052604081209061064a610b76565b6001600160a01b031681526020810191909152604001600020549190610db1565b610b7a565b5060019392505050565b60009081526020819052604090206002015490565b6000828152602081905260409020600201546106b2906106ad610b76565b610996565b6106ed5760405162461bcd60e51b815260040180806020018281038252602f815260200180611530602f913960400191505060405180910390fd5b6106f78282610e48565b5050565b60065460ff1690565b61070c610b76565b6001600160a01b0316816001600160a01b03161461075b5760405162461bcd60e51b815260040180806020018281038252602f8152602001806117ba602f913960400191505060405180910390fd5b6106f78282610eb1565b60006105e3610772610b76565b8461066b8560026000610783610b76565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610f1a565b6107cd60008051602061165a8339815191526106ad610b76565b6108085760405162461bcd60e51b81526004018080602001828103825260398152602001806115816039913960400191505060405180910390fd5b610810610f72565b565b61083e7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66106ad610b76565b6108795760405162461bcd60e51b815260040180806020018281038252603681526020018061167a6036913960400191505060405180910390fd5b6106f78282611013565b61089461088e610b76565b826110f3565b50565b600654610100900460ff1690565b6001600160a01b031660009081526001602052604090205490565b60006108f7826040518060600160405280602481526020016116b0602491396108f0866108eb610b76565b610b24565b9190610db1565b905061090b83610905610b76565b83610b7a565b61091583836110f3565b505050565b61093460008051602061165a8339815191526106ad610b76565b61096f5760405162461bcd60e51b815260040180806020018281038252603781526020018061175e6037913960400191505060405180910390fd5b6108106111dd565b600082815260208190526040812061098f9083611262565b9392505050565b600082815260208190526040812061098f908361126e565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105c55780601f1061059a576101008083540402835291602001916105c5565b600081565b60006105e3610a21610b76565b8461066b856040518060600160405280602581526020016117956025913960026000610a4b610b76565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610db1565b60006105e3610a89610b76565b8484610c66565b60008181526020819052604081206105e790611283565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b600082815260208190526040902060020154610ae9906106ad610b76565b61075b5760405162461bcd60e51b81526004018080602001828103825260308152602001806116026030913960400191505060405180910390fd5b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b60008051602061165a83398151915281565b600061098f836001600160a01b03841661128e565b3390565b6001600160a01b038316610bbf5760405162461bcd60e51b815260040180806020018281038252602481526020018061173a6024913960400191505060405180910390fd5b6001600160a01b038216610c045760405162461bcd60e51b81526004018080602001828103825260228152602001806115ba6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610cab5760405162461bcd60e51b81526004018080602001828103825260258152602001806117156025913960400191505060405180910390fd5b6001600160a01b038216610cf05760405162461bcd60e51b815260040180806020018281038252602381526020018061150d6023913960400191505060405180910390fd5b610cfb8383836112d8565b610d38816040518060600160405280602681526020016115dc602691396001600160a01b0386166000908152600160205260409020549190610db1565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610d679082610f1a565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716926000805160206116d483398151915292918290030190a3505050565b60008184841115610e405760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610e05578181015183820152602001610ded565b50505050905090810190601f168015610e325780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828152602081905260409020610e609082610b61565b156106f757610e6d610b76565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152602081905260409020610ec990826112e3565b156106f757610ed6610b76565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b60008282018381101561098f576040805162461bcd60e51b815260206004820152601b60248201527a536166654d6174683a206164646974696f6e206f766572666c6f7760281b604482015290519081900360640190fd5b610f7a610897565b610fc2576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b6006805461ff00191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610ff6610b76565b604080516001600160a01b039092168252519081900360200190a1565b6001600160a01b03821661106e576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b61107a600083836112d8565b6003546110879082610f1a565b6003556001600160a01b0382166000908152600160205260409020546110ad9082610f1a565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391926000805160206116d48339815191529281900390910190a35050565b6001600160a01b0382166111385760405162461bcd60e51b81526004018080602001828103825260218152602001806116f46021913960400191505060405180910390fd5b611144826000836112d8565b6111818160405180606001604052806022815260200161155f602291396001600160a01b0385166000908152600160205260409020549190610db1565b6001600160a01b0383166000908152600160205260409020556003546111a790826112f8565b6003556040805182815290516000916001600160a01b038516916000805160206116d48339815191529181900360200190a35050565b6111e5610897565b1561122a576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6006805461ff0019166101001790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610ff6610b76565b600061098f8383611355565b600061098f836001600160a01b0384166113b9565b60006105e7826113d1565b600061129a83836113b9565b6112d0575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556105e7565b5060006105e7565b6109158383836113d5565b600061098f836001600160a01b038416611424565b60008282111561134f576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b815460009082106113975760405162461bcd60e51b81526004018080602001828103825260228152602001806114eb6022913960400191505060405180910390fd5b8260000182815481106113a657fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b6113e0838383610915565b6113e8610897565b156109155760405162461bcd60e51b815260040180806020018281038252602a8152602001806117e9602a913960400191505060405180910390fd5b600081815260018301602052604081205480156114e0578354600019808301919081019060009087908390811061145757fe5b906000526020600020015490508087600001848154811061147457fe5b6000918252602080832090910192909255828152600189810190925260409020908401905586548790806114a457fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506105e7565b60009150506105e756fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e647345524332303a207472616e7366657220746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e7445524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e706175736545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636565d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a45524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e7445524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef45524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20706175736545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c6645524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564a2646970667358221220d7d8a0671b320634df15ba1c7d9ce496096331608e3c9e5ffcaa098e10dd147f64736f6c634300060c0033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { UniswapV2Pair } from \"../UniswapV2Pair\";\n\nexport class UniswapV2Pair__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(overrides?: Overrides): Promise<UniswapV2Pair> {\n    return super.deploy(overrides || {}) as Promise<UniswapV2Pair>;\n  }\n  getDeployTransaction(overrides?: Overrides): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): UniswapV2Pair {\n    return super.attach(address) as UniswapV2Pair;\n  }\n  connect(signer: Signer): UniswapV2Pair__factory {\n    return super.connect(signer) as UniswapV2Pair__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): UniswapV2Pair {\n    return new Contract(address, _abi, signerOrProvider) as UniswapV2Pair;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount0\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount1\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n    ],\n    name: \"Burn\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount0\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount1\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Mint\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount0In\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount1In\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount0Out\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount1Out\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n    ],\n    name: \"Swap\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint112\",\n        name: \"reserve0\",\n        type: \"uint112\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint112\",\n        name: \"reserve1\",\n        type: \"uint112\",\n      },\n    ],\n    name: \"Sync\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DOMAIN_SEPARATOR\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MINIMUM_LIQUIDITY\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"PERMIT_TYPEHASH\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n    ],\n    name: \"burn\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount0\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount1\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"factory\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getReserves\",\n    outputs: [\n      {\n        internalType: \"uint112\",\n        name: \"_reserve0\",\n        type: \"uint112\",\n      },\n      {\n        internalType: \"uint112\",\n        name: \"_reserve1\",\n        type: \"uint112\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"_blockTimestampLast\",\n        type: \"uint32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_token0\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_token1\",\n        type: \"address\",\n      },\n    ],\n    name: \"initialize\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"kLast\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"liquidity\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"nonces\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"permit\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"price0CumulativeLast\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"price1CumulativeLast\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n    ],\n    name: \"skim\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount0Out\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount1Out\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"swap\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"sync\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"token0\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"token1\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040526001600c5534801561001557600080fd5b50604080518082018252601281527129bab9b434a9bbb0b8102628102a37b5b2b760711b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fefbffe65652a145845c9bc8d0532945be6b9830fe1e9966c887bd298e551ac83818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600355600580546001600160a01b031916331790556122fa806101106000396000f3fe608060405234801561001057600080fd5b50600436106101595760003560e01c80636a627842116100c95780636a627842146103bf57806370a08231146103e55780637464fc3d1461040b5780637ecebe001461041357806389afcb441461043957806395d89b4114610478578063a9059cbb14610480578063ba9a7a56146104ac578063bc25cf77146104b4578063c45a0155146104da578063d21220a7146104e2578063d505accf146104ea578063dd62ed3e1461053b578063fff6cae91461056957610159565b8063022c0d9f1461015e57806306fdde03146101ea5780630902f1ac14610267578063095ea7b31461029f5780630dfe1681146102df57806318160ddd1461030357806323b872dd1461031d57806330adf81f14610353578063313ce5671461035b5780633644e51514610379578063485cc955146103815780635909c0d5146103af5780635a3d5493146103b7575b600080fd5b6101e86004803603608081101561017457600080fd5b8135916020810135916001600160a01b036040830135169190810190608081016060820135600160201b8111156101aa57600080fd5b8201836020820111156101bc57600080fd5b803590602001918460018302840111600160201b831117156101dd57600080fd5b509092509050610571565b005b6101f2610a79565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561022c578181015183820152602001610214565b50505050905090810190601f1680156102595780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61026f610aa7565b604080516001600160701b03948516815292909316602083015263ffffffff168183015290519081900360600190f35b6102cb600480360360408110156102b557600080fd5b506001600160a01b038135169060200135610ad1565b604080519115158252519081900360200190f35b6102e7610ae8565b604080516001600160a01b039092168252519081900360200190f35b61030b610af7565b60408051918252519081900360200190f35b6102cb6004803603606081101561033357600080fd5b506001600160a01b03813581169160208101359091169060400135610afd565b61030b610b91565b610363610bb5565b6040805160ff9092168252519081900360200190f35b61030b610bba565b6101e86004803603604081101561039757600080fd5b506001600160a01b0381358116916020013516610bc0565b61030b610c44565b61030b610c4a565b61030b600480360360208110156103d557600080fd5b50356001600160a01b0316610c50565b61030b600480360360208110156103fb57600080fd5b50356001600160a01b03166110cc565b61030b6110de565b61030b6004803603602081101561042957600080fd5b50356001600160a01b03166110e4565b61045f6004803603602081101561044f57600080fd5b50356001600160a01b03166110f6565b6040805192835260208301919091528051918290030190f35b6101f261148a565b6102cb6004803603604081101561049657600080fd5b506001600160a01b0381351690602001356114a9565b61030b6114b6565b6101e8600480360360208110156104ca57600080fd5b50356001600160a01b03166114bc565b6102e761162e565b6102e761163d565b6101e8600480360360e081101561050057600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c0013561164c565b61030b6004803603604081101561055157600080fd5b506001600160a01b038135811691602001351661184e565b6101e861186b565b600c546001146105bc576040805162461bcd60e51b8152602060048201526011602482015270155b9a5cddd85c158c8e881313d0d2d151607a1b604482015290519081900360640190fd5b6000600c55841515806105cf5750600084115b61060a5760405162461bcd60e51b81526004018080602001828103825260258152602001806121eb6025913960400191505060405180910390fd5b600080610615610aa7565b5091509150816001600160701b03168710801561063a5750806001600160701b031686105b6106755760405162461bcd60e51b81526004018080602001828103825260218152602001806122346021913960400191505060405180910390fd5b60065460075460009182916001600160a01b039182169190811690891682148015906106b35750806001600160a01b0316896001600160a01b031614155b6106fc576040805162461bcd60e51b8152602060048201526015602482015274556e697377617056323a20494e56414c49445f544f60581b604482015290519081900360640190fd5b8a1561070d5761070d828a8d6119cd565b891561071e5761071e818a8c6119cd565b86156107d057886001600160a01b03166310d1e85c338d8d8c8c6040518663ffffffff1660e01b815260040180866001600160a01b03168152602001858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509650505050505050600060405180830381600087803b1580156107b757600080fd5b505af11580156107cb573d6000803e3d6000fd5b505050505b604080516370a0823160e01b815230600482015290516001600160a01b038416916370a08231916024808301926020929190829003018186803b15801561081657600080fd5b505afa15801561082a573d6000803e3d6000fd5b505050506040513d602081101561084057600080fd5b5051604080516370a0823160e01b815230600482015290519195506001600160a01b038316916370a0823191602480820192602092909190829003018186803b15801561088c57600080fd5b505afa1580156108a0573d6000803e3d6000fd5b505050506040513d60208110156108b657600080fd5b5051925060009150506001600160701b0385168a900383116108d95760006108e8565b89856001600160701b03160383035b9050600089856001600160701b0316038311610905576000610914565b89856001600160701b03160383035b905060008211806109255750600081115b6109605760405162461bcd60e51b81526004018080602001828103825260248152602001806122106024913960400191505060405180910390fd5b6000610982610970846003611b60565b61097c876103e8611b60565b90611bc3565b90506000610994610970846003611b60565b90506109b9620f42406109b36001600160701b038b8116908b16611b60565b90611b60565b6109c38383611b60565b1015610a05576040805162461bcd60e51b815260206004820152600c60248201526b556e697377617056323a204b60a01b604482015290519081900360640190fd5b5050610a1384848888611c13565b60408051838152602081018390528082018d9052606081018c905290516001600160a01b038b169133917fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229181900360800190a350506001600c55505050505050505050565b6040518060400160405280601281526020017129bab9b434a9bbb0b8102628102a37b5b2b760711b81525081565b6008546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b6000610ade338484611dc4565b5060015b92915050565b6006546001600160a01b031681565b60005481565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610b7c576001600160a01b0384166000908152600260209081526040808320338452909152902054610b579083611bc3565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610b87848484611e26565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60035481565b6005546001600160a01b03163314610c16576040805162461bcd60e51b81526020600482015260146024820152732ab734b9bbb0b82b191d102327a92124a22222a760611b604482015290519081900360640190fd5b600680546001600160a01b039384166001600160a01b03199182161790915560078054929093169116179055565b60095481565b600a5481565b6000600c54600114610c9d576040805162461bcd60e51b8152602060048201526011602482015270155b9a5cddd85c158c8e881313d0d2d151607a1b604482015290519081900360640190fd5b6000600c81905580610cad610aa7565b50600654604080516370a0823160e01b815230600482015290519395509193506000926001600160a01b03909116916370a08231916024808301926020929190829003018186803b158015610d0157600080fd5b505afa158015610d15573d6000803e3d6000fd5b505050506040513d6020811015610d2b57600080fd5b5051600754604080516370a0823160e01b815230600482015290519293506000926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015610d7e57600080fd5b505afa158015610d92573d6000803e3d6000fd5b505050506040513d6020811015610da857600080fd5b505190506000610dc1836001600160701b038716611bc3565b90506000610dd8836001600160701b038716611bc3565b90506000610de68787611ec2565b60005490915080610fbd5760055460408051637cd07e4760e01b815290516000926001600160a01b031691637cd07e47916004808301926020929190829003018186803b158015610e3657600080fd5b505afa158015610e4a573d6000803e3d6000fd5b505050506040513d6020811015610e6057600080fd5b50519050336001600160a01b0382161415610f3b57806001600160a01b03166340dc0e376040518163ffffffff1660e01b815260040160206040518083038186803b158015610eae57600080fd5b505afa158015610ec2573d6000803e3d6000fd5b505050506040513d6020811015610ed857600080fd5b505199508915801590610eed57506000198a14155b610f36576040805162461bcd60e51b81526020600482015260156024820152744261642064657369726564206c697175696469747960581b604482015290519081900360640190fd5b610fb7565b6001600160a01b03811615610f90576040805162461bcd60e51b815260206004820152601660248201527526bab9ba103737ba103430bb329036b4b3b930ba37b960511b604482015290519081900360640190fd5b610fa86103e861097c610fa38888611b60565b612002565b9950610fb760006103e8612054565b50611000565b610ffd6001600160701b038916610fd48684611b60565b81610fdb57fe5b046001600160701b038916610ff08685611b60565b81610ff757fe5b046120cc565b98505b6000891161103f5760405162461bcd60e51b815260040180806020018281038252602881526020018061227d6028913960400191505060405180910390fd5b6110498a8a612054565b61105586868a8a611c13565b811561107f5760085461107b906001600160701b0380821691600160701b900416611b60565b600b555b6040805185815260208101859052815133927f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f928290030190a250506001600c5550949695505050505050565b60016020526000908152604090205481565b600b5481565b60046020526000908152604090205481565b600080600c54600114611144576040805162461bcd60e51b8152602060048201526011602482015270155b9a5cddd85c158c8e881313d0d2d151607a1b604482015290519081900360640190fd5b6000600c81905580611154610aa7565b50600654600754604080516370a0823160e01b815230600482015290519496509294506001600160a01b039182169391169160009184916370a08231916024808301926020929190829003018186803b1580156111b057600080fd5b505afa1580156111c4573d6000803e3d6000fd5b505050506040513d60208110156111da57600080fd5b5051604080516370a0823160e01b815230600482015290519192506000916001600160a01b038516916370a08231916024808301926020929190829003018186803b15801561122857600080fd5b505afa15801561123c573d6000803e3d6000fd5b505050506040513d602081101561125257600080fd5b5051306000908152600160205260408120549192506112718888611ec2565b600054909150806112828487611b60565b8161128957fe5b049a50806112978486611b60565b8161129e57fe5b04995060008b1180156112b1575060008a115b6112ec5760405162461bcd60e51b81526004018080602001828103825260288152602001806122556028913960400191505060405180910390fd5b6112f630846120e4565b611301878d8d6119cd565b61130c868d8c6119cd565b604080516370a0823160e01b815230600482015290516001600160a01b038916916370a08231916024808301926020929190829003018186803b15801561135257600080fd5b505afa158015611366573d6000803e3d6000fd5b505050506040513d602081101561137c57600080fd5b5051604080516370a0823160e01b815230600482015290519196506001600160a01b038816916370a0823191602480820192602092909190829003018186803b1580156113c857600080fd5b505afa1580156113dc573d6000803e3d6000fd5b505050506040513d60208110156113f257600080fd5b5051935061140285858b8b611c13565b811561142c57600854611428906001600160701b0380821691600160701b900416611b60565b600b555b604080518c8152602081018c905281516001600160a01b038f169233927fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496929081900390910190a35050505050505050506001600c81905550915091565b604051806040016040528060038152602001620534c560ec1b81525081565b6000610ade338484611e26565b6103e881565b600c54600114611507576040805162461bcd60e51b8152602060048201526011602482015270155b9a5cddd85c158c8e881313d0d2d151607a1b604482015290519081900360640190fd5b6000600c55600654600754600854604080516370a0823160e01b815230600482015290516001600160a01b0394851694909316926115b092859287926115ab926001600160701b03169185916370a0823191602480820192602092909190829003018186803b15801561157957600080fd5b505afa15801561158d573d6000803e3d6000fd5b505050506040513d60208110156115a357600080fd5b505190611bc3565b6119cd565b61162481846115ab6008600e9054906101000a90046001600160701b03166001600160701b0316856001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561157957600080fd5b50506001600c5550565b6005546001600160a01b031681565b6007546001600160a01b031681565b42841015611696576040805162461bcd60e51b8152602060048201526012602482015271155b9a5cddd85c158c8e881156141254915160721b604482015290519081900360640190fd5b6003546001600160a01b0380891660008181526004602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa1580156117b1573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906117e75750886001600160a01b0316816001600160a01b0316145b611838576040805162461bcd60e51b815260206004820152601c60248201527f556e697377617056323a20494e56414c49445f5349474e415455524500000000604482015290519081900360640190fd5b611843898989611dc4565b505050505050505050565b600260209081526000928352604080842090915290825290205481565b600c546001146118b6576040805162461bcd60e51b8152602060048201526011602482015270155b9a5cddd85c158c8e881313d0d2d151607a1b604482015290519081900360640190fd5b6000600c55600654604080516370a0823160e01b815230600482015290516119c6926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561190757600080fd5b505afa15801561191b573d6000803e3d6000fd5b505050506040513d602081101561193157600080fd5b5051600754604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b15801561197e57600080fd5b505afa158015611992573d6000803e3d6000fd5b505050506040513d60208110156119a857600080fd5b50516008546001600160701b0380821691600160701b900416611c13565b6001600c55565b60408051808201825260198152787472616e7366657228616464726573732c75696e743235362960381b60209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b1781529251815160009460609489169392918291908083835b60208310611a765780518252601f199092019160209182019101611a57565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611ad8576040519150601f19603f3d011682016040523d82523d6000602084013e611add565b606091505b5091509150818015611b0b575080511580611b0b5750808060200190516020811015611b0857600080fd5b50515b611b59576040805162461bcd60e51b815260206004820152601a602482015279155b9a5cddd85c158c8e881514905394d1915497d1905253115160321b604482015290519081900360640190fd5b5050505050565b6000811580611b7b57505080820282828281611b7857fe5b04145b610ae2576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b604482015290519081900360640190fd5b80820382811115610ae2576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160701b038411801590611c3157506001600160701b038311155b611c78576040805162461bcd60e51b8152602060048201526013602482015272556e697377617056323a204f564552464c4f5760681b604482015290519081900360640190fd5b60085463ffffffff42811691600160e01b90048116820390811615801590611ca857506001600160701b03841615155b8015611cbc57506001600160701b03831615155b15611d27578063ffffffff16611ce485611cd586612164565b6001600160e01b031690612176565b600980546001600160e01b03929092169290920201905563ffffffff8116611d0f84611cd587612164565b600a80546001600160e01b0392909216929092020190555b600880546001600160701b0319166001600160701b0388811691909117600160701b600160e01b031916600160701b8883168102919091176001600160e01b0316600160e01b63ffffffff871602179283905560408051848416815291909304909116602082015281517f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1929181900390910190a1505050505050565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316600090815260016020526040902054611e499082611bc3565b6001600160a01b038085166000908152600160205260408082209390935590841681522054611e78908261219b565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716926000805160206122a583398151915292918290030190a3505050565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b158015611f1357600080fd5b505afa158015611f27573d6000803e3d6000fd5b505050506040513d6020811015611f3d57600080fd5b5051600b546001600160a01b038216158015945091925090611fee578015611fe9576000611f7a610fa36001600160701b03888116908816611b60565b90506000611f8783612002565b905080821115611fe6576000611fa9611fa08484611bc3565b60005490611b60565b90506000611fc283611fbc866005611b60565b9061219b565b90506000818381611fcf57fe5b0490508015611fe257611fe28782612054565b5050505b50505b611ffa565b8015611ffa576000600b555b505092915050565b60006003821115612045575080600160028204015b8181101561203f5780915060028182858161202e57fe5b04018161203757fe5b049050612017565b5061204f565b811561204f575060015b919050565b600054612061908261219b565b60009081556001600160a01b038316815260016020526040902054612086908261219b565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391926000805160206122a58339815191529281900390910190a35050565b60008183106120db57816120dd565b825b9392505050565b6001600160a01b0382166000908152600160205260409020546121079082611bc3565b6001600160a01b0383166000908152600160205260408120919091555461212e9082611bc3565b60009081556040805183815290516001600160a01b038516916000805160206122a5833981519152919081900360200190a35050565b6001600160701b0316600160701b0290565b60006001600160701b0382166001600160e01b0384168161219357fe5b049392505050565b80820182811015610ae2576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfe556e697377617056323a20494e53554646494349454e545f4f55545055545f414d4f554e54556e697377617056323a20494e53554646494349454e545f494e5055545f414d4f554e54556e697377617056323a20494e53554646494349454e545f4c4951554944495459556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e4544556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e544544ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122067013b30ace6305f9f7433a35eb864bc036efd5c9662dcee6700188afc3d37c364736f6c634300060c0033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { UniswapV2Router02 } from \"../UniswapV2Router02\";\n\nexport class UniswapV2Router02__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    _factory: string,\n    _WETH: string,\n    overrides?: Overrides\n  ): Promise<UniswapV2Router02> {\n    return super.deploy(\n      _factory,\n      _WETH,\n      overrides || {}\n    ) as Promise<UniswapV2Router02>;\n  }\n  getDeployTransaction(\n    _factory: string,\n    _WETH: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(_factory, _WETH, overrides || {});\n  }\n  attach(address: string): UniswapV2Router02 {\n    return super.attach(address) as UniswapV2Router02;\n  }\n  connect(signer: Signer): UniswapV2Router02__factory {\n    return super.connect(signer) as UniswapV2Router02__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): UniswapV2Router02 {\n    return new Contract(address, _abi, signerOrProvider) as UniswapV2Router02;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_factory\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_WETH\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [],\n    name: \"WETH\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"tokenA\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"tokenB\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountADesired\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountBDesired\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountAMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountBMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"addLiquidity\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountA\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountB\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"liquidity\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountTokenDesired\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountTokenMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountETHMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"addLiquidityETH\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountToken\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountETH\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"liquidity\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"factory\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"reserveIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"reserveOut\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getAmountIn\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"reserveIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"reserveOut\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getAmountOut\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n    ],\n    name: \"getAmountsIn\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n    ],\n    name: \"getAmountsOut\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountA\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"reserveA\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"reserveB\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"quote\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountB\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"tokenA\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"tokenB\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"liquidity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountAMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountBMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"removeLiquidity\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountA\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountB\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"liquidity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountTokenMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountETHMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"removeLiquidityETH\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountToken\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountETH\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"liquidity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountTokenMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountETHMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"removeLiquidityETHSupportingFeeOnTransferTokens\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountETH\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"liquidity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountTokenMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountETHMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approveMax\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"removeLiquidityETHWithPermit\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountToken\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountETH\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"liquidity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountTokenMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountETHMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approveMax\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountETH\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"tokenA\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"tokenB\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"liquidity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountAMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountBMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approveMax\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"removeLiquidityWithPermit\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountA\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountB\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapETHForExactTokens\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOutMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapExactETHForTokens\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOutMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapExactETHForTokensSupportingFeeOnTransferTokens\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountOutMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapExactTokensForETH\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountOutMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapExactTokensForETHSupportingFeeOnTransferTokens\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountOutMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapExactTokensForTokens\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountIn\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountOutMin\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountInMax\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapTokensForExactETH\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amountOut\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountInMax\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"path\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapTokensForExactTokens\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"receive\",\n  },\n];\n\nconst _bytecode =\n  \"\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { UniswapV2Factory } from \"../UniswapV2Factory\";\n\nexport class UniswapV2Factory__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    _feeToSetter: string,\n    overrides?: Overrides\n  ): Promise<UniswapV2Factory> {\n    return super.deploy(\n      _feeToSetter,\n      overrides || {}\n    ) as Promise<UniswapV2Factory>;\n  }\n  getDeployTransaction(\n    _feeToSetter: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(_feeToSetter, overrides || {});\n  }\n  attach(address: string): UniswapV2Factory {\n    return super.attach(address) as UniswapV2Factory;\n  }\n  connect(signer: Signer): UniswapV2Factory__factory {\n    return super.connect(signer) as UniswapV2Factory__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): UniswapV2Factory {\n    return new Contract(address, _abi, signerOrProvider) as UniswapV2Factory;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_feeToSetter\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"token0\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"token1\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"pair\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PairCreated\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"allPairs\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"allPairsLength\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"tokenA\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"tokenB\",\n        type: \"address\",\n      },\n    ],\n    name: \"createPair\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"pair\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"feeTo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"feeToSetter\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"getPair\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"migrator\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"pairCodeHash\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_feeTo\",\n        type: \"address\",\n      },\n    ],\n    name: \"setFeeTo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_feeToSetter\",\n        type: \"address\",\n      },\n    ],\n    name: \"setFeeToSetter\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_migrator\",\n        type: \"address\",\n      },\n    ],\n    name: \"setMigrator\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b50604051612bd0380380612bd08339818101604052602081101561003357600080fd5b5051600180546001600160a01b0319166001600160a01b03909216919091179055612b6d806100636000396000f3fe608060405234801561001057600080fd5b50600436106100995760003560e01c8063017e7e581461009e578063094b7415146100c25780631e3dd18b146100ca57806323cf3118146100e7578063574f2ba31461010f5780637cd07e47146101295780639aab924814610131578063a2e74af614610139578063c9c653961461015f578063e6a439051461018d578063f46901ed146101bb575b600080fd5b6100a66101e1565b604080516001600160a01b039092168252519081900360200190f35b6100a66101f0565b6100a6600480360360208110156100e057600080fd5b50356101ff565b61010d600480360360208110156100fd57600080fd5b50356001600160a01b0316610226565b005b61011761029e565b60408051918252519081900360200190f35b6100a66102a4565b6101176102b3565b61010d6004803603602081101561014f57600080fd5b50356001600160a01b03166102e5565b6100a66004803603604081101561017557600080fd5b506001600160a01b038135811691602001351661035d565b6100a6600480360360408110156101a357600080fd5b506001600160a01b0381358116916020013516610682565b61010d600480360360208110156101d157600080fd5b50356001600160a01b03166106a8565b6000546001600160a01b031681565b6001546001600160a01b031681565b6004818154811061020c57fe5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b0316331461027c576040805162461bcd60e51b81526020600482015260146024820152732ab734b9bbb0b82b191d102327a92124a22222a760611b604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60045490565b6002546001600160a01b031681565b6000604051806020016102c590610720565b6020820181038252601f19601f8201166040525080519060200120905090565b6001546001600160a01b0316331461033b576040805162461bcd60e51b81526020600482015260146024820152732ab734b9bbb0b82b191d102327a92124a22222a760611b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000816001600160a01b0316836001600160a01b031614156103c6576040805162461bcd60e51b815260206004820152601e60248201527f556e697377617056323a204944454e544943414c5f4144445245535345530000604482015290519081900360640190fd5b600080836001600160a01b0316856001600160a01b0316106103e95783856103ec565b84845b90925090506001600160a01b038216610446576040805162461bcd60e51b8152602060048201526017602482015276556e697377617056323a205a45524f5f4144445245535360481b604482015290519081900360640190fd5b6001600160a01b038281166000908152600360209081526040808320858516845290915290205416156104b9576040805162461bcd60e51b8152602060048201526016602482015275556e697377617056323a20504149525f45584953545360501b604482015290519081900360640190fd5b6060604051806020016104cb90610720565b6020820181038252601f19601f8201166040525090506000838360405160200180836001600160a01b031660601b8152601401826001600160a01b031660601b815260140192505050604051602081830303815290604052805190602001209050808251602084016000f59450846001600160a01b031663485cc95585856040518363ffffffff1660e01b815260040180836001600160a01b03168152602001826001600160a01b0316815260200192505050600060405180830381600087803b15801561059857600080fd5b505af11580156105ac573d6000803e3d6000fd5b505050506001600160a01b0384811660008181526003602081815260408084208987168086529083528185208054978d166001600160a01b031998891681179091559383528185208686528352818520805488168517905560048054600181018255958190527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b90950180549097168417909655925483519283529082015281517f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9929181900390910190a35050505092915050565b60036020908152600092835260408084209091529082529020546001600160a01b031681565b6001546001600160a01b031633146106fe576040805162461bcd60e51b81526020600482015260146024820152732ab734b9bbb0b82b191d102327a92124a22222a760611b604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b61240a8061072e8339019056fe60806040526001600c5534801561001557600080fd5b50604080518082018252601281527129bab9b434a9bbb0b8102628102a37b5b2b760711b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fefbffe65652a145845c9bc8d0532945be6b9830fe1e9966c887bd298e551ac83818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600355600580546001600160a01b031916331790556122fa806101106000396000f3fe608060405234801561001057600080fd5b50600436106101595760003560e01c80636a627842116100c95780636a627842146103bf57806370a08231146103e55780637464fc3d1461040b5780637ecebe001461041357806389afcb441461043957806395d89b4114610478578063a9059cbb14610480578063ba9a7a56146104ac578063bc25cf77146104b4578063c45a0155146104da578063d21220a7146104e2578063d505accf146104ea578063dd62ed3e1461053b578063fff6cae91461056957610159565b8063022c0d9f1461015e57806306fdde03146101ea5780630902f1ac14610267578063095ea7b31461029f5780630dfe1681146102df57806318160ddd1461030357806323b872dd1461031d57806330adf81f14610353578063313ce5671461035b5780633644e51514610379578063485cc955146103815780635909c0d5146103af5780635a3d5493146103b7575b600080fd5b6101e86004803603608081101561017457600080fd5b8135916020810135916001600160a01b036040830135169190810190608081016060820135600160201b8111156101aa57600080fd5b8201836020820111156101bc57600080fd5b803590602001918460018302840111600160201b831117156101dd57600080fd5b509092509050610571565b005b6101f2610a79565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561022c578181015183820152602001610214565b50505050905090810190601f1680156102595780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61026f610aa7565b604080516001600160701b03948516815292909316602083015263ffffffff168183015290519081900360600190f35b6102cb600480360360408110156102b557600080fd5b506001600160a01b038135169060200135610ad1565b604080519115158252519081900360200190f35b6102e7610ae8565b604080516001600160a01b039092168252519081900360200190f35b61030b610af7565b60408051918252519081900360200190f35b6102cb6004803603606081101561033357600080fd5b506001600160a01b03813581169160208101359091169060400135610afd565b61030b610b91565b610363610bb5565b6040805160ff9092168252519081900360200190f35b61030b610bba565b6101e86004803603604081101561039757600080fd5b506001600160a01b0381358116916020013516610bc0565b61030b610c44565b61030b610c4a565b61030b600480360360208110156103d557600080fd5b50356001600160a01b0316610c50565b61030b600480360360208110156103fb57600080fd5b50356001600160a01b03166110cc565b61030b6110de565b61030b6004803603602081101561042957600080fd5b50356001600160a01b03166110e4565b61045f6004803603602081101561044f57600080fd5b50356001600160a01b03166110f6565b6040805192835260208301919091528051918290030190f35b6101f261148a565b6102cb6004803603604081101561049657600080fd5b506001600160a01b0381351690602001356114a9565b61030b6114b6565b6101e8600480360360208110156104ca57600080fd5b50356001600160a01b03166114bc565b6102e761162e565b6102e761163d565b6101e8600480360360e081101561050057600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c0013561164c565b61030b6004803603604081101561055157600080fd5b506001600160a01b038135811691602001351661184e565b6101e861186b565b600c546001146105bc576040805162461bcd60e51b8152602060048201526011602482015270155b9a5cddd85c158c8e881313d0d2d151607a1b604482015290519081900360640190fd5b6000600c55841515806105cf5750600084115b61060a5760405162461bcd60e51b81526004018080602001828103825260258152602001806121eb6025913960400191505060405180910390fd5b600080610615610aa7565b5091509150816001600160701b03168710801561063a5750806001600160701b031686105b6106755760405162461bcd60e51b81526004018080602001828103825260218152602001806122346021913960400191505060405180910390fd5b60065460075460009182916001600160a01b039182169190811690891682148015906106b35750806001600160a01b0316896001600160a01b031614155b6106fc576040805162461bcd60e51b8152602060048201526015602482015274556e697377617056323a20494e56414c49445f544f60581b604482015290519081900360640190fd5b8a1561070d5761070d828a8d6119cd565b891561071e5761071e818a8c6119cd565b86156107d057886001600160a01b03166310d1e85c338d8d8c8c6040518663ffffffff1660e01b815260040180866001600160a01b03168152602001858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509650505050505050600060405180830381600087803b1580156107b757600080fd5b505af11580156107cb573d6000803e3d6000fd5b505050505b604080516370a0823160e01b815230600482015290516001600160a01b038416916370a08231916024808301926020929190829003018186803b15801561081657600080fd5b505afa15801561082a573d6000803e3d6000fd5b505050506040513d602081101561084057600080fd5b5051604080516370a0823160e01b815230600482015290519195506001600160a01b038316916370a0823191602480820192602092909190829003018186803b15801561088c57600080fd5b505afa1580156108a0573d6000803e3d6000fd5b505050506040513d60208110156108b657600080fd5b5051925060009150506001600160701b0385168a900383116108d95760006108e8565b89856001600160701b03160383035b9050600089856001600160701b0316038311610905576000610914565b89856001600160701b03160383035b905060008211806109255750600081115b6109605760405162461bcd60e51b81526004018080602001828103825260248152602001806122106024913960400191505060405180910390fd5b6000610982610970846003611b60565b61097c876103e8611b60565b90611bc3565b90506000610994610970846003611b60565b90506109b9620f42406109b36001600160701b038b8116908b16611b60565b90611b60565b6109c38383611b60565b1015610a05576040805162461bcd60e51b815260206004820152600c60248201526b556e697377617056323a204b60a01b604482015290519081900360640190fd5b5050610a1384848888611c13565b60408051838152602081018390528082018d9052606081018c905290516001600160a01b038b169133917fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229181900360800190a350506001600c55505050505050505050565b6040518060400160405280601281526020017129bab9b434a9bbb0b8102628102a37b5b2b760711b81525081565b6008546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b6000610ade338484611dc4565b5060015b92915050565b6006546001600160a01b031681565b60005481565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610b7c576001600160a01b0384166000908152600260209081526040808320338452909152902054610b579083611bc3565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610b87848484611e26565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60035481565b6005546001600160a01b03163314610c16576040805162461bcd60e51b81526020600482015260146024820152732ab734b9bbb0b82b191d102327a92124a22222a760611b604482015290519081900360640190fd5b600680546001600160a01b039384166001600160a01b03199182161790915560078054929093169116179055565b60095481565b600a5481565b6000600c54600114610c9d576040805162461bcd60e51b8152602060048201526011602482015270155b9a5cddd85c158c8e881313d0d2d151607a1b604482015290519081900360640190fd5b6000600c81905580610cad610aa7565b50600654604080516370a0823160e01b815230600482015290519395509193506000926001600160a01b03909116916370a08231916024808301926020929190829003018186803b158015610d0157600080fd5b505afa158015610d15573d6000803e3d6000fd5b505050506040513d6020811015610d2b57600080fd5b5051600754604080516370a0823160e01b815230600482015290519293506000926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015610d7e57600080fd5b505afa158015610d92573d6000803e3d6000fd5b505050506040513d6020811015610da857600080fd5b505190506000610dc1836001600160701b038716611bc3565b90506000610dd8836001600160701b038716611bc3565b90506000610de68787611ec2565b60005490915080610fbd5760055460408051637cd07e4760e01b815290516000926001600160a01b031691637cd07e47916004808301926020929190829003018186803b158015610e3657600080fd5b505afa158015610e4a573d6000803e3d6000fd5b505050506040513d6020811015610e6057600080fd5b50519050336001600160a01b0382161415610f3b57806001600160a01b03166340dc0e376040518163ffffffff1660e01b815260040160206040518083038186803b158015610eae57600080fd5b505afa158015610ec2573d6000803e3d6000fd5b505050506040513d6020811015610ed857600080fd5b505199508915801590610eed57506000198a14155b610f36576040805162461bcd60e51b81526020600482015260156024820152744261642064657369726564206c697175696469747960581b604482015290519081900360640190fd5b610fb7565b6001600160a01b03811615610f90576040805162461bcd60e51b815260206004820152601660248201527526bab9ba103737ba103430bb329036b4b3b930ba37b960511b604482015290519081900360640190fd5b610fa86103e861097c610fa38888611b60565b612002565b9950610fb760006103e8612054565b50611000565b610ffd6001600160701b038916610fd48684611b60565b81610fdb57fe5b046001600160701b038916610ff08685611b60565b81610ff757fe5b046120cc565b98505b6000891161103f5760405162461bcd60e51b815260040180806020018281038252602881526020018061227d6028913960400191505060405180910390fd5b6110498a8a612054565b61105586868a8a611c13565b811561107f5760085461107b906001600160701b0380821691600160701b900416611b60565b600b555b6040805185815260208101859052815133927f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f928290030190a250506001600c5550949695505050505050565b60016020526000908152604090205481565b600b5481565b60046020526000908152604090205481565b600080600c54600114611144576040805162461bcd60e51b8152602060048201526011602482015270155b9a5cddd85c158c8e881313d0d2d151607a1b604482015290519081900360640190fd5b6000600c81905580611154610aa7565b50600654600754604080516370a0823160e01b815230600482015290519496509294506001600160a01b039182169391169160009184916370a08231916024808301926020929190829003018186803b1580156111b057600080fd5b505afa1580156111c4573d6000803e3d6000fd5b505050506040513d60208110156111da57600080fd5b5051604080516370a0823160e01b815230600482015290519192506000916001600160a01b038516916370a08231916024808301926020929190829003018186803b15801561122857600080fd5b505afa15801561123c573d6000803e3d6000fd5b505050506040513d602081101561125257600080fd5b5051306000908152600160205260408120549192506112718888611ec2565b600054909150806112828487611b60565b8161128957fe5b049a50806112978486611b60565b8161129e57fe5b04995060008b1180156112b1575060008a115b6112ec5760405162461bcd60e51b81526004018080602001828103825260288152602001806122556028913960400191505060405180910390fd5b6112f630846120e4565b611301878d8d6119cd565b61130c868d8c6119cd565b604080516370a0823160e01b815230600482015290516001600160a01b038916916370a08231916024808301926020929190829003018186803b15801561135257600080fd5b505afa158015611366573d6000803e3d6000fd5b505050506040513d602081101561137c57600080fd5b5051604080516370a0823160e01b815230600482015290519196506001600160a01b038816916370a0823191602480820192602092909190829003018186803b1580156113c857600080fd5b505afa1580156113dc573d6000803e3d6000fd5b505050506040513d60208110156113f257600080fd5b5051935061140285858b8b611c13565b811561142c57600854611428906001600160701b0380821691600160701b900416611b60565b600b555b604080518c8152602081018c905281516001600160a01b038f169233927fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496929081900390910190a35050505050505050506001600c81905550915091565b604051806040016040528060038152602001620534c560ec1b81525081565b6000610ade338484611e26565b6103e881565b600c54600114611507576040805162461bcd60e51b8152602060048201526011602482015270155b9a5cddd85c158c8e881313d0d2d151607a1b604482015290519081900360640190fd5b6000600c55600654600754600854604080516370a0823160e01b815230600482015290516001600160a01b0394851694909316926115b092859287926115ab926001600160701b03169185916370a0823191602480820192602092909190829003018186803b15801561157957600080fd5b505afa15801561158d573d6000803e3d6000fd5b505050506040513d60208110156115a357600080fd5b505190611bc3565b6119cd565b61162481846115ab6008600e9054906101000a90046001600160701b03166001600160701b0316856001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561157957600080fd5b50506001600c5550565b6005546001600160a01b031681565b6007546001600160a01b031681565b42841015611696576040805162461bcd60e51b8152602060048201526012602482015271155b9a5cddd85c158c8e881156141254915160721b604482015290519081900360640190fd5b6003546001600160a01b0380891660008181526004602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa1580156117b1573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906117e75750886001600160a01b0316816001600160a01b0316145b611838576040805162461bcd60e51b815260206004820152601c60248201527f556e697377617056323a20494e56414c49445f5349474e415455524500000000604482015290519081900360640190fd5b611843898989611dc4565b505050505050505050565b600260209081526000928352604080842090915290825290205481565b600c546001146118b6576040805162461bcd60e51b8152602060048201526011602482015270155b9a5cddd85c158c8e881313d0d2d151607a1b604482015290519081900360640190fd5b6000600c55600654604080516370a0823160e01b815230600482015290516119c6926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561190757600080fd5b505afa15801561191b573d6000803e3d6000fd5b505050506040513d602081101561193157600080fd5b5051600754604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b15801561197e57600080fd5b505afa158015611992573d6000803e3d6000fd5b505050506040513d60208110156119a857600080fd5b50516008546001600160701b0380821691600160701b900416611c13565b6001600c55565b60408051808201825260198152787472616e7366657228616464726573732c75696e743235362960381b60209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b1781529251815160009460609489169392918291908083835b60208310611a765780518252601f199092019160209182019101611a57565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611ad8576040519150601f19603f3d011682016040523d82523d6000602084013e611add565b606091505b5091509150818015611b0b575080511580611b0b5750808060200190516020811015611b0857600080fd5b50515b611b59576040805162461bcd60e51b815260206004820152601a602482015279155b9a5cddd85c158c8e881514905394d1915497d1905253115160321b604482015290519081900360640190fd5b5050505050565b6000811580611b7b57505080820282828281611b7857fe5b04145b610ae2576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b604482015290519081900360640190fd5b80820382811115610ae2576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160701b038411801590611c3157506001600160701b038311155b611c78576040805162461bcd60e51b8152602060048201526013602482015272556e697377617056323a204f564552464c4f5760681b604482015290519081900360640190fd5b60085463ffffffff42811691600160e01b90048116820390811615801590611ca857506001600160701b03841615155b8015611cbc57506001600160701b03831615155b15611d27578063ffffffff16611ce485611cd586612164565b6001600160e01b031690612176565b600980546001600160e01b03929092169290920201905563ffffffff8116611d0f84611cd587612164565b600a80546001600160e01b0392909216929092020190555b600880546001600160701b0319166001600160701b0388811691909117600160701b600160e01b031916600160701b8883168102919091176001600160e01b0316600160e01b63ffffffff871602179283905560408051848416815291909304909116602082015281517f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1929181900390910190a1505050505050565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316600090815260016020526040902054611e499082611bc3565b6001600160a01b038085166000908152600160205260408082209390935590841681522054611e78908261219b565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716926000805160206122a583398151915292918290030190a3505050565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b158015611f1357600080fd5b505afa158015611f27573d6000803e3d6000fd5b505050506040513d6020811015611f3d57600080fd5b5051600b546001600160a01b038216158015945091925090611fee578015611fe9576000611f7a610fa36001600160701b03888116908816611b60565b90506000611f8783612002565b905080821115611fe6576000611fa9611fa08484611bc3565b60005490611b60565b90506000611fc283611fbc866005611b60565b9061219b565b90506000818381611fcf57fe5b0490508015611fe257611fe28782612054565b5050505b50505b611ffa565b8015611ffa576000600b555b505092915050565b60006003821115612045575080600160028204015b8181101561203f5780915060028182858161202e57fe5b04018161203757fe5b049050612017565b5061204f565b811561204f575060015b919050565b600054612061908261219b565b60009081556001600160a01b038316815260016020526040902054612086908261219b565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391926000805160206122a58339815191529281900390910190a35050565b60008183106120db57816120dd565b825b9392505050565b6001600160a01b0382166000908152600160205260409020546121079082611bc3565b6001600160a01b0383166000908152600160205260408120919091555461212e9082611bc3565b60009081556040805183815290516001600160a01b038516916000805160206122a5833981519152919081900360200190a35050565b6001600160701b0316600160701b0290565b60006001600160701b0382166001600160e01b0384168161219357fe5b049392505050565b80820182811015610ae2576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfe556e697377617056323a20494e53554646494349454e545f4f55545055545f414d4f554e54556e697377617056323a20494e53554646494349454e545f494e5055545f414d4f554e54556e697377617056323a20494e53554646494349454e545f4c4951554944495459556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e4544556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e544544ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122067013b30ace6305f9f7433a35eb864bc036efd5c9662dcee6700188afc3d37c364736f6c634300060c0033a26469706673582212201c9095349c81bb716b30548be378f817591a021f407e9b3e85d58632c2333f2764736f6c634300060c0033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { ERC20PresetMinterPauser } from \"../ERC20PresetMinterPauser\";\n\nexport class ERC20PresetMinterPauser__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    name: string,\n    symbol: string,\n    overrides?: Overrides\n  ): Promise<ERC20PresetMinterPauser> {\n    return super.deploy(\n      name,\n      symbol,\n      overrides || {}\n    ) as Promise<ERC20PresetMinterPauser>;\n  }\n  getDeployTransaction(\n    name: string,\n    symbol: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(name, symbol, overrides || {});\n  }\n  attach(address: string): ERC20PresetMinterPauser {\n    return super.attach(address) as ERC20PresetMinterPauser;\n  }\n  connect(signer: Signer): ERC20PresetMinterPauser__factory {\n    return super.connect(signer) as ERC20PresetMinterPauser__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ERC20PresetMinterPauser {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as ERC20PresetMinterPauser;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"name\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"symbol\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Paused\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"previousAdminRole\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"newAdminRole\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RoleAdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleGranted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleRevoked\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Unpaused\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DEFAULT_ADMIN_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MINTER_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"PAUSER_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"burn\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"burnFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleAdmin\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoleMember\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleMemberCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"grantRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasRole\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"pause\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"paused\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"renounceRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"revokeRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"unpause\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { ERC20 } from \"../ERC20\";\n\nexport class ERC20__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    name_: string,\n    symbol_: string,\n    overrides?: Overrides\n  ): Promise<ERC20> {\n    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC20>;\n  }\n  getDeployTransaction(\n    name_: string,\n    symbol_: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(name_, symbol_, overrides || {});\n  }\n  attach(address: string): ERC20 {\n    return super.attach(address) as ERC20;\n  }\n  connect(signer: Signer): ERC20__factory {\n    return super.connect(signer) as ERC20__factory;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): ERC20 {\n    return new Contract(address, _abi, signerOrProvider) as ERC20;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"name_\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"symbol_\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b5060405162000c5038038062000c508339818101604052604081101561003557600080fd5b810190808051604051939291908464010000000082111561005557600080fd5b90830190602082018581111561006a57600080fd5b825164010000000081118282018810171561008457600080fd5b82525081516020918201929091019080838360005b838110156100b1578181015183820152602001610099565b50505050905090810190601f1680156100de5780820380516001836020036101000a031916815260200191505b506040526020018051604051939291908464010000000082111561010157600080fd5b90830190602082018581111561011657600080fd5b825164010000000081118282018810171561013057600080fd5b82525081516020918201929091019080838360005b8381101561015d578181015183820152602001610145565b50505050905090810190601f16801561018a5780820380516001836020036101000a031916815260200191505b50604052505082516101a4915060039060208501906101cd565b5080516101b89060049060208401906101cd565b50506005805460ff1916601217905550610260565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061020e57805160ff191683800117855561023b565b8280016001018555821561023b579182015b8281111561023b578251825591602001919060010190610220565b5061024792915061024b565b5090565b5b80821115610247576000815560010161024c565b6109e080620002706000396000f3fe608060405234801561001057600080fd5b50600436106100995760003560e01c806306fdde031461009e578063095ea7b31461011b57806318160ddd1461015b57806323b872dd14610175578063313ce567146101ab57806339509351146101c957806370a08231146101f557806395d89b411461021b578063a457c2d714610223578063a9059cbb1461024f578063dd62ed3e1461027b575b600080fd5b6100a66102a9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100e05781810151838201526020016100c8565b50505050905090810190601f16801561010d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101476004803603604081101561013157600080fd5b506001600160a01b03813516906020013561033f565b604080519115158252519081900360200190f35b61016361035c565b60408051918252519081900360200190f35b6101476004803603606081101561018b57600080fd5b506001600160a01b03813581169160208101359091169060400135610362565b6101b36103e9565b6040805160ff9092168252519081900360200190f35b610147600480360360408110156101df57600080fd5b506001600160a01b0381351690602001356103f2565b6101636004803603602081101561020b57600080fd5b50356001600160a01b0316610440565b6100a661045b565b6101476004803603604081101561023957600080fd5b506001600160a01b0381351690602001356104bc565b6101476004803603604081101561026557600080fd5b506001600160a01b038135169060200135610524565b6101636004803603604081101561029157600080fd5b506001600160a01b0381358116916020013516610538565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103355780601f1061030a57610100808354040283529160200191610335565b820191906000526020600020905b81548152906001019060200180831161031857829003601f168201915b5050505050905090565b600061035361034c610563565b8484610567565b50600192915050565b60025490565b600061036f848484610653565b6103df8461037b610563565b6103da85604051806060016040528060288152602001610915602891396001600160a01b038a166000908152600160205260408120906103b9610563565b6001600160a01b0316815260208101919091526040016000205491906107ae565b610567565b5060019392505050565b60055460ff1690565b60006103536103ff610563565b846103da8560016000610410610563565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610845565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103355780601f1061030a57610100808354040283529160200191610335565b60006103536104c9610563565b846103da8560405180606001604052806025815260200161098660259139600160006104f3610563565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906107ae565b6000610353610531610563565b8484610653565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166105ac5760405162461bcd60e51b81526004018080602001828103825260248152602001806109626024913960400191505060405180910390fd5b6001600160a01b0382166105f15760405162461bcd60e51b81526004018080602001828103825260228152602001806108cd6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106985760405162461bcd60e51b815260040180806020018281038252602581526020018061093d6025913960400191505060405180910390fd5b6001600160a01b0382166106dd5760405162461bcd60e51b81526004018080602001828103825260238152602001806108aa6023913960400191505060405180910390fd5b6106e88383836108a4565b610725816040518060600160405280602681526020016108ef602691396001600160a01b03861660009081526020819052604090205491906107ae565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107549082610845565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561083d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156108025781810151838201526020016107ea565b50505050905090810190601f16801561082f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008282018381101561089d576040805162461bcd60e51b815260206004820152601b60248201527a536166654d6174683a206164646974696f6e206f766572666c6f7760281b604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212209216d188022deb1eba23155a739bf9b6e0ee57d65333aa9e06a39448288a68ac64736f6c634300060c0033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { providers, Signer, ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport Web3Modal, { IProviderOptions } from \"web3modal\";\nimport { MyToken1 } from \"./typechain/MyToken1\";\nimport { MyToken1__factory } from \"./typechain/factories/MyToken1__factory\";\nimport { UniswapV2ERC20 } from \"./typechain/UniswapV2ERC20\";\nimport { UniswapV2ERC20__factory } from \"./typechain/factories/UniswapV2ERC20__factory\";\nimport { MyToken2 } from \"./typechain/MyToken2\";\nimport { MyToken2__factory } from \"./typechain/factories/MyToken2__factory\";\nimport { UniswapV2Pair } from \"./typechain/UniswapV2Pair\";\nimport { UniswapV2Pair__factory } from \"./typechain/factories/UniswapV2Pair__factory\";\nimport { UniswapV2Router02 } from \"./typechain/UniswapV2Router02\";\nimport { UniswapV2Router02__factory } from \"./typechain/factories/UniswapV2Router02__factory\";\nimport { UniswapV2Factory } from \"./typechain/UniswapV2Factory\";\nimport { UniswapV2Factory__factory } from \"./typechain/factories/UniswapV2Factory__factory\";\nimport { ERC20PresetMinterPauser } from \"./typechain/ERC20PresetMinterPauser\";\nimport { ERC20PresetMinterPauser__factory } from \"./typechain/factories/ERC20PresetMinterPauser__factory\";\nimport { ERC20 } from \"./typechain/ERC20\";\nimport { ERC20__factory } from \"./typechain/factories/ERC20__factory\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nconst emptyContract = {\n    instance: undefined,\n    factory: undefined\n};\nconst defaultProvider: providers.Provider | undefined = undefined;\nexport const ProviderContext = React.createContext<[providers.Provider | undefined, React.Dispatch<React.SetStateAction<providers.Provider | undefined>>]>([defaultProvider, () => { }]);\nconst defaultCurrentAddress: string = \"\";\nexport const CurrentAddressContext = React.createContext<[string, React.Dispatch<React.SetStateAction<string>>]>([defaultCurrentAddress, () => { }]);\nconst defaultSigner: Signer | undefined = undefined;\nexport const SignerContext = React.createContext<[Signer | undefined, React.Dispatch<React.SetStateAction<Signer | undefined>>]>([defaultSigner, () => { }]);\nconst defaultSymfoniContext: SymfoniContextInterface = {\n    currentHardhatProvider: \"\",\n    init: () => { throw Error(\"Symfoni context not initialized\") },\n    loading: false,\n    messages: [],\n    providers: []\n};\nexport const SymfoniContext = React.createContext<SymfoniContextInterface>(defaultSymfoniContext);\nexport const MyToken1Context = React.createContext<SymfoniMyToken1>(emptyContract);\nexport const UniswapV2ERC20Context = React.createContext<SymfoniUniswapV2ERC20>(emptyContract);\nexport const MyToken2Context = React.createContext<SymfoniMyToken2>(emptyContract);\nexport const UniswapV2PairContext = React.createContext<SymfoniUniswapV2Pair>(emptyContract);\nexport const UniswapV2Router02Context = React.createContext<SymfoniUniswapV2Router02>(emptyContract);\nexport const UniswapV2FactoryContext = React.createContext<SymfoniUniswapV2Factory>(emptyContract);\nexport const ERC20PresetMinterPauserContext = React.createContext<SymfoniERC20PresetMinterPauser>(emptyContract);\nexport const ERC20Context = React.createContext<SymfoniERC20>(emptyContract);\n\nexport interface SymfoniContextInterface {\n    init: (provider?: string) => void;\n    loading: boolean;\n    messages: string[];\n    currentHardhatProvider: string;\n    providers: string[];\n}\n\nexport interface SymfoniProps {\n    autoInit?: boolean;\n    showLoading?: boolean;\n    loadingComponent?: React.ReactNode;\n}\n\nexport interface SymfoniMyToken1 {\n    instance?: MyToken1;\n    factory?: MyToken1__factory;\n}\n\nexport interface SymfoniUniswapV2ERC20 {\n    instance?: UniswapV2ERC20;\n    factory?: UniswapV2ERC20__factory;\n}\n\nexport interface SymfoniMyToken2 {\n    instance?: MyToken2;\n    factory?: MyToken2__factory;\n}\n\nexport interface SymfoniUniswapV2Pair {\n    instance?: UniswapV2Pair;\n    factory?: UniswapV2Pair__factory;\n}\n\nexport interface SymfoniUniswapV2Router02 {\n    instance?: UniswapV2Router02;\n    factory?: UniswapV2Router02__factory;\n}\n\nexport interface SymfoniUniswapV2Factory {\n    instance?: UniswapV2Factory;\n    factory?: UniswapV2Factory__factory;\n}\n\nexport interface SymfoniERC20PresetMinterPauser {\n    instance?: ERC20PresetMinterPauser;\n    factory?: ERC20PresetMinterPauser__factory;\n}\n\nexport interface SymfoniERC20 {\n    instance?: ERC20;\n    factory?: ERC20__factory;\n}\n\nexport const Symfoni: React.FC<SymfoniProps> = ({\n    showLoading = true,\n    autoInit = true,\n    ...props\n}) => {\n    const [initializeCounter, setInitializeCounter] = useState(0);\n    const [currentHardhatProvider, setCurrentHardhatProvider] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [messages, setMessages] = useState<string[]>([]);\n    const [signer, setSigner] = useState<Signer | undefined>(defaultSigner);\n    const [provider, setProvider] = useState<providers.Provider | undefined>(defaultProvider);\n    const [currentAddress, setCurrentAddress] = useState<string>(defaultCurrentAddress);\n    const [fallbackProvider] = useState<string | undefined>(undefined);\n    const [providerPriority, setProviderPriority] = useState<string[]>([\"web3modal\", \"hardhat\"]);\n    const [MyToken1, setMyToken1] = useState<SymfoniMyToken1>(emptyContract);\n    const [UniswapV2ERC20, setUniswapV2ERC20] = useState<SymfoniUniswapV2ERC20>(emptyContract);\n    const [MyToken2, setMyToken2] = useState<SymfoniMyToken2>(emptyContract);\n    const [UniswapV2Pair, setUniswapV2Pair] = useState<SymfoniUniswapV2Pair>(emptyContract);\n    const [UniswapV2Router02, setUniswapV2Router02] = useState<SymfoniUniswapV2Router02>(emptyContract);\n    const [UniswapV2Factory, setUniswapV2Factory] = useState<SymfoniUniswapV2Factory>(emptyContract);\n    const [ERC20PresetMinterPauser, setERC20PresetMinterPauser] = useState<SymfoniERC20PresetMinterPauser>(emptyContract);\n    const [ERC20, setERC20] = useState<SymfoniERC20>(emptyContract);\n    useEffect(() => {\n        if (messages.length > 0)\n            console.debug(messages.pop())\n    }, [messages])\n\n    const getProvider = async (): Promise<{ provider: providers.Provider, hardhatProviderName: string } | undefined> => {\n        let hardhatProviderName = \"Not set\";\n        let _providerPriority = [...providerPriority];\n        // Fallback provider\n        if (fallbackProvider && autoInit && initializeCounter === 0) {\n            if (localStorage.getItem(\"WEB3_CONNECT_CACHED_PROVIDER\") === null) {\n                _providerPriority = _providerPriority.sort((a, b) => {\n                    return a === fallbackProvider ? -1 : b === fallbackProvider ? 1 : 0;\n                })\n            }\n        }\n        const provider = await _providerPriority.reduce(async (maybeProvider: Promise<providers.Provider | undefined>, providerIdentification) => {\n            let foundProvider = await maybeProvider\n            if (foundProvider) {\n                return Promise.resolve(foundProvider)\n            }\n            else {\n                switch (providerIdentification.toLowerCase()) {\n                    case \"web3modal\":\n                        try {\n                            const provider = await getWeb3ModalProvider()\n                            const web3provider = new ethers.providers.Web3Provider(provider);\n                            hardhatProviderName = \"web3modal\";\n                            return Promise.resolve(web3provider)\n                        } catch (error) {\n                            return Promise.resolve(undefined)\n                        }\n                    case \"hardhat\":\n                        try {\n                            const provider = new ethers.providers.JsonRpcProvider({\n                                url: \"http://127.0.0.1:8545\",\n                            });\n                            hardhatProviderName = \"hardhat\";\n                            return Promise.resolve(provider)\n                        } catch (error) {\n                            return Promise.resolve(undefined)\n                        } default:\n                        return Promise.resolve(undefined)\n                }\n            }\n        }, Promise.resolve(undefined)) // end reduce\n        return provider ? { provider, hardhatProviderName } : undefined\n    };\n    const getSigner = async (_provider: providers.Provider, hardhatProviderName: string): Promise<Signer | undefined> => {\n        switch (hardhatProviderName) {\n            case \"web3modal\":\n                const web3provider = _provider as ethers.providers.Web3Provider\n                return await web3provider.getSigner()\n            case \"hardhat\":\n                return ethers.Wallet.fromMnemonic(\"undefined\").connect(_provider)\n            default:\n                return undefined\n        }\n    };\n    const getWeb3ModalProvider = async (): Promise<any> => {\n        const providerOptions: IProviderOptions = {\n            walletconnect: {\n                package: WalletConnectProvider,\n                options: {\n                    infuraId: \"95a89c3520c5483d9585205bf74b40d4\"\n                }\n            }\n        };\n        const web3Modal = new Web3Modal({\n            // network: \"mainnet\",\n            cacheProvider: false,\n            providerOptions, // required\n        });\n        return await web3Modal.connect();\n    };\n\n    useEffect(() => {\n        let subscribed = true\n        const doAsync = async () => {\n            const finish = (text: string) => {\n                setLoading(false)\n                setMessages(old => [...old, text])\n            }\n            const finishWithContracts = (text: string) => {\n                setMyToken1(getMyToken1(_provider, _signer))\n                setUniswapV2ERC20(getUniswapV2ERC20(_provider, _signer))\n                setMyToken2(getMyToken2(_provider, _signer))\n                setUniswapV2Pair(getUniswapV2Pair(_provider, _signer))\n                setUniswapV2Router02(getUniswapV2Router02(_provider, _signer))\n                setUniswapV2Factory(getUniswapV2Factory(_provider, _signer))\n                setERC20PresetMinterPauser(getERC20PresetMinterPauser(_provider, _signer))\n                setERC20(getERC20(_provider, _signer))\n                finish(text)\n            }\n            if (!autoInit && initializeCounter === 0) return finish(\"Auto init turned off.\")\n            setLoading(true)\n            setMessages(old => [...old, \"Initiating Symfoni React\"])\n            const providerObject = await getProvider() // getProvider can actually return undefined, see issue https://github.com/microsoft/TypeScript/issues/11094\n\n            if (!subscribed || !providerObject) return finish(\"No provider or signer.\")\n            const _provider = providerObject.provider\n            setProvider(_provider)\n            setMessages(old => [...old, \"Useing \" + providerObject.hardhatProviderName])\n            setCurrentHardhatProvider(providerObject.hardhatProviderName)\n            const _signer = await getSigner(_provider, providerObject.hardhatProviderName);\n\n            if (!subscribed || !_signer) return finishWithContracts(\"Provider, without signer.\")\n            setSigner(_signer)\n            setMessages(old => [...old, \"Useing signer\"])\n            const address = await _signer.getAddress()\n\n            if (!subscribed || !address) return finishWithContracts(\"Provider and signer, without address.\")\n            setCurrentAddress(address)\n\n            return finishWithContracts(\"Completed Symfoni context initialization.\")\n        };\n        doAsync();\n        return () => { subscribed = false }\n    }, [initializeCounter])\n\n    const getMyToken1 = (_provider: providers.Provider, _signer?: Signer) => {\n\n        const contractAddress = \"0x759ce295723232666CDc52c06b401Fe808788CDd\"\n        const instance = _signer ? MyToken1__factory.connect(contractAddress, _signer) : MyToken1__factory.connect(contractAddress, _provider)\n        const contract: SymfoniMyToken1 = {\n            instance: instance,\n            factory: _signer ? new MyToken1__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getUniswapV2ERC20 = (_provider: providers.Provider, _signer?: Signer) => {\n        let instance = _signer ? UniswapV2ERC20__factory.connect(ethers.constants.AddressZero, _signer) : UniswapV2ERC20__factory.connect(ethers.constants.AddressZero, _provider)\n        const contract: SymfoniUniswapV2ERC20 = {\n            instance: instance,\n            factory: _signer ? new UniswapV2ERC20__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getMyToken2 = (_provider: providers.Provider, _signer?: Signer) => {\n\n        const contractAddress = \"0x342534faC03e2a689b6Cd459C356b7862de8E55a\"\n        const instance = _signer ? MyToken2__factory.connect(contractAddress, _signer) : MyToken2__factory.connect(contractAddress, _provider)\n        const contract: SymfoniMyToken2 = {\n            instance: instance,\n            factory: _signer ? new MyToken2__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getUniswapV2Pair = (_provider: providers.Provider, _signer?: Signer) => {\n        let instance = _signer ? UniswapV2Pair__factory.connect(ethers.constants.AddressZero, _signer) : UniswapV2Pair__factory.connect(ethers.constants.AddressZero, _provider)\n        const contract: SymfoniUniswapV2Pair = {\n            instance: instance,\n            factory: _signer ? new UniswapV2Pair__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getUniswapV2Router02 = (_provider: providers.Provider, _signer?: Signer) => {\n\n        const contractAddress = \"0x6C8006eAC177a0757e330f3b385eb30Df0EB4d58\"\n        const instance = _signer ? UniswapV2Router02__factory.connect(contractAddress, _signer) : UniswapV2Router02__factory.connect(contractAddress, _provider)\n        const contract: SymfoniUniswapV2Router02 = {\n            instance: instance,\n            factory: _signer ? new UniswapV2Router02__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getUniswapV2Factory = (_provider: providers.Provider, _signer?: Signer) => {\n\n        const contractAddress = \"0x1995db44811110F91EBC0A7434F871b87866f087\"\n        const instance = _signer ? UniswapV2Factory__factory.connect(contractAddress, _signer) : UniswapV2Factory__factory.connect(contractAddress, _provider)\n        const contract: SymfoniUniswapV2Factory = {\n            instance: instance,\n            factory: _signer ? new UniswapV2Factory__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getERC20PresetMinterPauser = (_provider: providers.Provider, _signer?: Signer) => {\n        let instance = _signer ? ERC20PresetMinterPauser__factory.connect(ethers.constants.AddressZero, _signer) : ERC20PresetMinterPauser__factory.connect(ethers.constants.AddressZero, _provider)\n        const contract: SymfoniERC20PresetMinterPauser = {\n            instance: instance,\n            factory: _signer ? new ERC20PresetMinterPauser__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getERC20 = (_provider: providers.Provider, _signer?: Signer) => {\n        let instance = _signer ? ERC20__factory.connect(ethers.constants.AddressZero, _signer) : ERC20__factory.connect(ethers.constants.AddressZero, _provider)\n        const contract: SymfoniERC20 = {\n            instance: instance,\n            factory: _signer ? new ERC20__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n\n    const handleInitProvider = (provider?: string) => {\n        if (provider) {\n            setProviderPriority(old => old.sort((a, b) => {\n                return a === provider ? -1 : b === provider ? 1 : 0;\n            }))\n        }\n        setInitializeCounter(initializeCounter + 1)\n    }\n    return (\n        <SymfoniContext.Provider value={{ init: (provider) => handleInitProvider(provider), providers: providerPriority, currentHardhatProvider, loading, messages }}>\n            <ProviderContext.Provider value={[provider, setProvider]}>\n                <SignerContext.Provider value={[signer, setSigner]}>\n                    <CurrentAddressContext.Provider value={[currentAddress, setCurrentAddress]}>\n                        <MyToken1Context.Provider value={MyToken1}>\n                            <UniswapV2ERC20Context.Provider value={UniswapV2ERC20}>\n                                <MyToken2Context.Provider value={MyToken2}>\n                                    <UniswapV2PairContext.Provider value={UniswapV2Pair}>\n                                        <UniswapV2Router02Context.Provider value={UniswapV2Router02}>\n                                            <UniswapV2FactoryContext.Provider value={UniswapV2Factory}>\n                                                <ERC20PresetMinterPauserContext.Provider value={ERC20PresetMinterPauser}>\n                                                    <ERC20Context.Provider value={ERC20}>\n                                                        {showLoading && loading ?\n                                                            props.loadingComponent\n                                                                ? props.loadingComponent\n                                                                : <div>\n                                                                    {messages.map((msg, i) => (\n                                                                        <p key={i}>{msg}</p>\n                                                                    ))}\n                                                                </div>\n                                                            : props.children\n                                                        }\n                                                    </ERC20Context.Provider >\n                                                </ERC20PresetMinterPauserContext.Provider >\n                                            </UniswapV2FactoryContext.Provider >\n                                        </UniswapV2Router02Context.Provider >\n                                    </UniswapV2PairContext.Provider >\n                                </MyToken2Context.Provider >\n                            </UniswapV2ERC20Context.Provider >\n                        </MyToken1Context.Provider >\n                    </CurrentAddressContext.Provider>\n                </SignerContext.Provider>\n            </ProviderContext.Provider>\n        </SymfoniContext.Provider>\n    )\n\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport {\n    ERC20Context,\n    UniswapV2Router02Context,\n    CurrentAddressContext,\n} from \"../hardhat/SymfoniContext\";\nimport { ERC20 } from \"../hardhat/typechain/ERC20\";\nimport ethers from \"ethers\";\ninterface Props {\n    tokenA: string;\n    tokenB: string;\n}\n//import styled from 'styled-components';\n\n// test test\n\nexport const Swap: React.FC<Props> = ({ tokenA, tokenB }) => {\n    const ERC20Factory = useContext(ERC20Context);\n\n    const [tokenAInstance, setTokenAInstance] = useState<ERC20>();\n    const [tokenBInstance, setTokenBInstance] = useState<ERC20>();\n\n    const [tokenASymbol, setTokenASymbol] = useState<string>();\n    const [tokenBSymbol, setTokenBSymbol] = useState<string>();\n\n    useEffect(() => {\n        if (ERC20Factory.instance) {\n            setTokenAInstance(ERC20Factory.instance!.attach(tokenA));\n            setTokenBInstance(ERC20Factory.instance!.attach(tokenB));\n        }\n    }, [ERC20Factory.instance, tokenA, tokenB]);\n\n    useEffect(() => {\n        const fetchTokenSymbols = async () => {\n            if (!tokenAInstance || !tokenBInstance) {\n                return;\n            }\n\n            setTokenASymbol(await tokenAInstance.symbol());\n            setTokenBSymbol(await tokenBInstance.symbol());\n        };\n        fetchTokenSymbols();\n    }, [tokenAInstance, tokenBInstance])\n\n    const [amount, setAmount] = useState<number>(0);\n\n    const handleAmountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setAmount(parseInt(event.target.value));\n    };\n\n    const router = useContext(UniswapV2Router02Context);\n    const [exchangeAmount, setExchangeAmount] = useState<string>(\"0\");\n\n    useEffect(() => {\n        const fetchExchangeAmount = async () => {\n            if (!router.instance) {\n                console.log(\"router instance not found\");\n                return;\n            }\n\n            if (amount > 0) {\n                // router gets angry if you pass in a 0\n                const amountsOut = await router.instance.getAmountsOut(\n                    ethers.utils.parseEther(amount.toString()),\n                    [tokenA, tokenB]\n                );\n                setExchangeAmount(ethers.utils.formatUnits(amountsOut[1].toString(), 18));\n            }\n        };\n\n        fetchExchangeAmount();\n    }, [router.instance, amount, tokenA, tokenB]);\n\n    const [currentAddress] = useContext(CurrentAddressContext);\n\n    const handleSwap = async () => {\n        if (!router.instance || !tokenAInstance) {\n            console.log(\"router or token instance not found\");\n            return;\n        }\n        const time = Math.floor(Date.now() / 1000) + 3600;\n\n        await (\n            await tokenAInstance.approve(\n                router.instance.address,\n                ethers.utils.parseEther(amount.toString())\n            )\n        ).wait();\n        await (\n            await router.instance.swapExactTokensForTokens(\n                ethers.utils.parseEther(amount.toString()),\n                0, // we shouldn't leave this as 0, it is dangerous in real trading\n                [tokenA, tokenB],\n                currentAddress,\n                time\n            )\n        ).wait();\n    };\n\n    return (\n        <div className=\"bg-gray-900 shadow sm:rounded-lg border-4 border-purple-900 h-80 \">\n            <div className=\"px-4 py-3\">\n                <div className=\"clear-both h-20\">\n                    <div className=\"bg-green-500 px-6 border-none sm:rounded-lg float-left\">\n\n                        <div className=\"text-sm text-gray-200\">Swap From: </div>\n\n                        <div className=\"border-none relative z-10 px-1 py-2 float-left\">\n                            <img src=\"/images/h.png\" alt=\"\" width=\"60\" height=\"50\" />\n                        </div>\n\n                        <div className=\"text-white text-2xl font-bold font-sans\">{tokenASymbol}</div>\n                    </div>\n\n                    <div className=\"bg-gray-500 border-4 border-green-400 mt-8 sm:rounded-lg float-right\">\n                        <div className=\"text-gray-200 text-xl text-left ml-3\">Amount:\n                            <input\n                                type=\"text\"\n                                name=\"Amount\"\n                                id=\"amount\"\n\n                                className=\"mx-2 flex-item shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block  border-gray-300 rounded-md text-gray-800 text-2xl w-80 text-center bg-gray-200\"\n                                placeholder=\"20\"\n                                onChange={handleAmountChange}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"border-none relative z-10 px-1 py-2 ml-4 float-left\">\n                    <img src=\"/images/swapblue.gif\" alt=\"\" width=\"60\" height=\"70\" />\n                </div>\n\n                <div className=\"border-none clear-both h-20\">\n                    <div className=\"bg-pink-500  px-7 border-none -mt-4 sm:rounded-lg float-left\">\n\n                        <div className=\"text-sm text-gray-200\">Swap To: </div>\n\n                        <div className=\"border-none relative z-10 px-1 py-2 float-left\">\n                            <img src=\"/images/s.png\" alt=\"\" width=\"60\" height=\"50\" />\n                        </div>\n\n                        <div className=\"text-white text-2xl font-bold font-sans\">{tokenBSymbol}</div>\n                    </div>\n\n                    <div className=\"bg-gray-500 border-4 border-pink-500 sm:rounded-lg mt-4 float-right\">\n                        <div className=\"text-gray-200 text-xl text-left ml-3\">Receive:\n                            <input\n                                type=\"text\"\n                                name=\"Receive\"\n                                id=\"receive\"\n                                disabled\n                                className=\"mx-2 flex-item shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block  border-gray-300 rounded-md text-gray-800 text-2xl w-80 text-center bg-gray-200\"\n                                placeholder=\"20\"\n                                value={exchangeAmount}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"float-right mr-4 mt-4\">\n                <button\n                    type=\"submit\"\n                    className=\"justify-center px-4 py-1 border border-transparent shadow-sm font-medium rounded-md text-black bg-yellow-300 hover:bg-indigo-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\n                    onClick={handleSwap}\n                >\n                    Connect to a wallet\n                </button>\n\n            </div>\n        </div>\n\n    );\n};\n\n","import React from \"react\";\nimport \"./App.css\";\nimport { Symfoni } from \"./hardhat/SymfoniContext\";\nimport { Swap } from \"./components/Swap\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Symfoni autoInit={true}>\n        <div className=\"min-h-screen bg-bgpic bg-no-repeat bg-cover bg-center\">\n          <div className=\"max-w-2xl mx-auto sm:px-6 lg:px-8 border-2 border-transparent\">\n            <div className=\"border-none h-24 mt-44 w-96 px-3 mx-auto\">\n              <div className=\"border-none text-green-500 font-sans text-6xl w-44 float-left\">\n                Switch\n              </div>\n              <div className=\"border-none text-pink-500 font-sans text-6xl w-44 float-right\">\n                -Swap\n              </div>\n            </div>\n            <Swap\n              tokenA=\"0x759ce295723232666CDc52c06b401Fe808788CDd\"\n              tokenB=\"0x342534faC03e2a689b6Cd459C356b7862de8E55a\"\n            ></Swap>\n          </div>\n        </div>\n      </Symfoni>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}